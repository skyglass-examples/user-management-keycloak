apiVersion: apps/v1
kind: Deployment
metadata:
  name: usermgmt
  labels:
    app: usermgmt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usermgmt
  template:
    metadata:
      labels:
        app: usermgmt
    spec:
      containers:
        - name: usermgmt
          image: skyglass/user-management:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8095
              hostPort: 8095            
          env:
            - name: DB_HOSTNAME
              value: "mysql"
            - name: DB_PORT
              value: "3306"
            - name: DB_NAME
              value: "usermgmt"
            - name: DB_USERNAME
              value: "dbadmin"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-db-password
                  key: db-password
            - name: NOTIFICATION_SERVICE_HOST
              value: "notification-clusterip-service"
            - name: NOTIFICATION_SERVICE_PORT
              value: "8096"   
                                              
---
# Kubernetes Secrets
apiVersion: v1
kind: Secret
metadata:
  name: mysql-db-password
#type: Opaque means that from kubernetes's point of view the contents of this Secret is unstructured, it can contain arbitrary key-value pairs. In contrast, there is the Secret storing ServiceAccount credentials, or the ones used as ImagePullSecret . These have a constrained contents.
type: Opaque
data:
  # Output of echo -n 'dbpassword11' | base64
  db-password: ZGJwYXNzd29yZDEx



---
apiVersion: v1
kind: Service
metadata:
  name: usermgmt
spec:
  ports:
    - protocol: TCP
      name: web
      port: 80
      targetPort: 8095
  selector:
    app: usermgmt
